corrplot(a$r, method = 'circle',
type = 'full', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7,
cl.lim=c(-1,1), col=colorRampPalette(c("blue","white","red"))(200),
p.mat = a$p, sig.level = 0, insig = 'blank')
corrplot(a$r, method = 'circle',
type = 'full', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7,
cl.lim=c(-1,1), col=colorRampPalette(c("blue","white","red"))(200),
p.mat = a$p, sig.level = 0.05, insig = 'blank')
corrplot(a$r, method = 'circle',
type = 'full', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("blue","white","red"))(200),
p.mat = a$p, sig.level = 0.05, insig = 'blank')
corrplot(a$r, method = 'circle',
type = 'full', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7,
cl.lim=c(-1,1), col=colorRampPalette(c("blue","white","red"))(200),
p.mat = a$p, sig.level = 0.05, insig = 'p-value')
corrplot(a$r, method = 'circle',
type = 'full', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7,
cl.lim=c(-1,1), col=colorRampPalette(c("blue","white","red"))(200),
p.mat = a$p, sig.level = 0.05, insig = 'blank')
corrplot(a$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7,
cl.lim=c(-1,1), col=colorRampPalette(c("blue","white","red"))(200),
p.mat = a$p, sig.level = 0.05, insig = 'blank')
corrplot(a$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("blue","white","red"))(200),
p.mat = a$p, sig.level = 0.05, insig = 'blank')
corrplot(a$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = a$p, sig.level = 0.05, insig = 'blank')
#change resolution
png("corr_plot_viz1.png", width = 10, height = 10, units = 'in', res = 800)
corrplot(mcor$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor$p, sig.level = 0.05, insig = 'blank')
dev.off()
# load data ---------------------------------------------------------------
#viz 1
df <- read.table('https://raw.githubusercontent.com/DBertazioli/ARmeetup/master/Visualizations/survey/Questionario%20psicometrico%20(VIZ_1).txt',
header = TRUE, sep = ",")
df_corr <- df[,c(-1,-8)]
mcor <- corr.test(as.matrix(df_corr), as.matrix(df_corr), method = 'spearman')
#change resolution
png("corr_plot_viz1.png", width = 10, height = 10, units = 'in', res = 800)
corrplot(mcor$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor$p, sig.level = 0.05, insig = 'blank')
dev.off()
#viz 2
df <- read.table('https://raw.githubusercontent.com/DBertazioli/ARmeetup/master/Visualizations/survey/Questionario%20psicometrico%20(VIZ_2).txt',
header = TRUE, sep = ",")
df_corr <- df[,c(-1,-8)]
mcor <- corr.test(as.matrix(df_corr), as.matrix(df_corr), method = 'spearman')
#change resolution
png("corr_plot_viz2.png", width = 10, height = 10, units = 'in', res = 800)
corrplot(mcor$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor$p, sig.level = 0.05, insig = 'blank')
dev.off()
corrplot(mcor$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor$p, sig.level = 0.05, insig = 'blank')
corrplot(mcor$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor$p, sig.level = 0.1, insig = 'blank')
corrplot(mcor$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor$p, sig.level = 0.1, insig = 'blank')
corrplot(mcor$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor$p, sig.level = 0.5, insig = 'blank')
mcor$p
#install.packages('corrplot')
library(corrplot)
library(psych)
library(Hmisc)
#viz 2
df <- read.table('https://raw.githubusercontent.com/DBertazioli/ARmeetup/master/Visualizations/survey/Questionario%20psicometrico%20(VIZ_2).txt',
header = TRUE, sep = ",")
df_corr <- df[,c(-1,-8)]
mcor <- corr.test(as.matrix(df_corr), as.matrix(df_corr), method = 'spearman')
mcor$p
mcor <- corr.test(as.matrix(df_corr), method = 'spearman')
mcor$p
corrplot(mcor$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor$p, sig.level = 0.05, insig = 'blank')
corrplot(mcor$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor$p, sig.level = 0.1, insig = 'blank')
corrplot(mcor$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor$p, sig.level = 0.25, insig = 'blank')
corrplot(mcor$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor$p, sig.level = 0.5, insig = 'blank')
mcor$p
corrplot(mcor$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor$p, sig.level = 0.95, insig = 'blank')
# load data ---------------------------------------------------------------
#viz 1
df <- read.table('https://raw.githubusercontent.com/DBertazioli/ARmeetup/master/Visualizations/survey/Questionario%20psicometrico%20(VIZ_1).txt',
header = TRUE, sep = ",")
df_corr <- df[,c(-1,-8)]
mcor <- corr.test(as.matrix(df_corr), method = 'spearman')
corrplot(mcor$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor$p, sig.level = 0.05, insig = 'blank')
#viz 2
df2 <- read.table('https://raw.githubusercontent.com/DBertazioli/ARmeetup/master/Visualizations/survey/Questionario%20psicometrico%20(VIZ_2).txt',
header = TRUE, sep = ",")
df_corr2 <- df2[,c(-1,-8)]
mcor2 <- corr.test(df_corr2, method = 'spearman')
corrplot(mcor2$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor2$p, sig.level = 0.05, insig = 'blank')
mcor2 <- corr.test(df_corr2, method = 'pearson')
corrplot(mcor2$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor2$p, sig.level = 0.05, insig = 'blank')
mcor2 <- corr.test(df_corr2, method = 'kendall')
corrplot(mcor2$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor2$p, sig.level = 0.05, insig = 'blank')
mcor2 <- corr.test(df_corr2, method = 'pearson')
View(mcor2)
mcor2[["r"]]
mcor2[["p"]]
mcor2 <- corr.test(df_corr2, method = 'pearson')
corrplot(mcor$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor$p, sig.level = 0.05, insig = 'blank')
corrplot(mcor2$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor2$p, sig.level = 0.05, insig = 'blank')
mcor2$p
corrplot(mcor2$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor2$p, sig.level = 0.10, insig = 'blank')
mcor2$p
corrplot(mcor2$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor2$p, sig.level = 0.15, insig = 'blank')
corrplot(mcor2$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor2$p, sig.level = 0.15, insig = 'blank')
mcor2$p
corrplot(mcor2$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor2$p, sig.level = 0.15, insig = 'blank')
mcor2[["r"]]
1
corrplot(mcor2$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor2$p, sig.level = 0.25, insig = 'blank')
corrplot(mcor2$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor2$p, sig.level = 0.5, insig = 'blank')
mcor2$p
corrplot(mcor2$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor2$p, sig.level = 0.35, insig = 'blank')
corrplot(mcor2$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor2$p, sig.level = 0.35, insig = 'blank')
#install.packages('corrplot')
library(corrplot)
library(psych)
library(Hmisc)
# load data ---------------------------------------------------------------
#viz 1
df <- read.table('https://raw.githubusercontent.com/DBertazioli/ARmeetup/master/Visualizations/survey/Questionario%20psicometrico%20(VIZ_1).txt',
header = TRUE, sep = ",")
#viz 2
df2 <- read.table('https://raw.githubusercontent.com/DBertazioli/ARmeetup/master/Visualizations/survey/Questionario%20psicometrico%20(VIZ_2).txt',
header = TRUE, sep = ",")
df_corr <- df[,c(-1,-8)]
df_corr2 <- df2[,c(-1,-8)]
mcor <- corr.test(as.matrix(df_corr), method = 'spearman')
mcor2 <- corr.test(df_corr2, method = 'pearson')
corrplot(mcor2$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor2$p, sig.level = 0.35, insig = 'blank')
mcor2$p
corrplot(mcor2$r, method = 'circle',
type = 'full', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor2$p, sig.level = 0.35, insig = 'blank')
mcor2 <- corr.test(df_corr2, method = 'pearson', adjust = 'none')
mcor2$p
corrplot(mcor2$r, method = 'circle',
type = 'full', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor2$p, sig.level = 0.1, insig = 'blank')
corrplot(mcor2$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor2$p, sig.level = 0.1, insig = 'blank')
corrplot(mcor2$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor2$p, sig.level = 0.05, insig = 'blank')
mcor <- corr.test(df_corr, method = 'spearman', adjust = 'none')
mcor2 <- corr.test(df_corr2, method = 'pearson', adjust = 'none')
corrplot(mcor$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor$p, sig.level = 0.05, insig = 'blank')
#install.packages('corrplot')
library(corrplot)
library(psych)
library(Hmisc)
# load data ---------------------------------------------------------------
#viz 1
df <- read.table('https://raw.githubusercontent.com/DBertazioli/ARmeetup/master/Visualizations/survey/Questionario%20psicometrico%20(VIZ_1).txt',
header = TRUE, sep = ",")
#viz 2
df2 <- read.table('https://raw.githubusercontent.com/DBertazioli/ARmeetup/master/Visualizations/survey/Questionario%20psicometrico%20(VIZ_2).txt',
header = TRUE, sep = ",")
df_corr <- df[,c(-1,-8)]
df_corr2 <- df2[,c(-1,-8)]
mcor <- corr.test(df_corr, method = 'spearman', adjust = 'none')
mcor2 <- corr.test(df_corr2, method = 'pearson', adjust = 'none')
#change resolution
png("corr_plot_viz1.png", width = 10, height = 10, units = 'in', res = 800)
corrplot(mcor$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor$p, sig.level = 0.05, insig = 'blank')
dev.off()
#change resolution
png("corr_plot_viz2.png", width = 10, height = 10, units = 'in', res = 800)
corrplot(mcor2$r, method = 'circle',
type = 'upper', order = 'original', tl.col = 'black',
tl.srt = 45, tl.cex = 0.7, addCoef.col  = 'black', number.cex = 0.85,
cl.lim=c(-1,1), col=colorRampPalette(c("lightblue","white","orange"))(200),
p.mat = mcor2$p, sig.level = 0.05, insig = 'blank')
dev.off()
library(ggplot2)
library(plyr)
library(reshape2)
library(tibble)
library(dplyr)
library(tidyr)
library(ggthemes)
# import data -------------------------------------------------------------
#iz 1
df <- read.table('https://raw.githubusercontent.com/DBertazioli/ARmeetup/master/Visualizations/survey/Questionario%20psicometrico%20(VIZ_1).txt', header = TRUE, sep = ",")
df_stack <- df[,c(-1,-8)]
df_stack = ifelse(df_stack <= 3, 0, 1)
# reshaping ---------------------------------------------------------------
df_stack <- as.data.frame(df_stack) # converto in dataframe
new_data <- cbind(table(df_stack$Utile), #credo tabella di contingenza
table(df_stack$Intuitiva),
table(df_stack$Chiara),
table(df_stack$Informativa),
table(df_stack$Bella),
table(df_stack$Valore.complessivo))
row.names(new_data) <- c("1-3", "4-6")
colnames(new_data) <- c("Utile", "Intuitiva", "Chiara", "Informativa", "Bella", "Valore.complessivo")
new_data <- as.data.frame(new_data)
n <- nrow(df_stack)
new_data <- new_data/n # frequenze relative
reshaped <- gather(new_data, "question", "answer") # reshape con pacchetto tidyr
reshaped$value.answer <- c("1-3","4-6","1-3","4-6","1-3","4-6","1-3","4-6","1-3","4-6","1-3","4-6")
reshaped$up <- reshaped$answer + 1.96*(sqrt((reshaped$answer*(1-reshaped$answer))/n)) # definisco conf int
reshaped$low <- reshaped$answer - 1.96*(sqrt((reshaped$answer*(1-reshaped$answer))/n))
reshaped_error <- reshaped[c(2,4,6,8,10,12),] # prendo solo valori per p non per 1-p
ggplot(reshaped,
aes(fill = value.answer,
y = answer,
x = question)) +
geom_bar(stat = "identity",
position = "fill",
width = 0.95,
alpha = 0.65,
colour = 'white') +
geom_errorbar(data = reshaped_error,
aes(x = question,
ymax = up,
ymin = low,
alpha = 0.65),
show.legend = F,
width = .15) +
geom_hline(yintercept = 0.50, linetype = "dashed", color = "white", size = 0.5) +
scale_x_discrete(limits = c('Valore.complessivo', 'Bella', 'Informativa', 'Chiara', 'Intuitiva', 'Utile')) +
scale_y_continuous(labels = c('0 %', '25 %', '50 %', '75 %','100 %'),
sec.axis = sec_axis(~.*1,
labels = c('100 %', '75 %',
'50 %', '25 %',
'0 %'))) +
coord_flip() +
scale_fill_manual(values = c("#80ccff","#ffad33")) +
geom_text(aes(label = paste0(format(round(reshaped$answer*100, 1)), ' %'),
fontface = 'bold', vjust = 1.75), position = position_stack(vjust = 0.2),
size = 4, color = 'white') +
theme_classic(base_size = 12, base_family = "Helvetica") + # versione base, poi puoi arricchirlo come ti piace
theme(axis.text.x.bottom=element_text(size=10, color = '#ffad33', face = 'bold')) +
theme(axis.text.x.top=element_text(size=10, color = '#80ccff', face = 'bold')) +
theme(axis.title.y=element_text(size=14, face="bold", vjust=1)) +
theme(axis.title.x=element_text(size=14, face="bold", vjust=1)) +
theme(axis.text.y=element_text(size=10))
ggplot(reshaped,
aes(fill = value.answer,
y = answer,
x = question)) +
geom_bar(stat = "identity",
position = "fill",
width = 0.95,
alpha = 0.65,
colour = 'white') +
geom_errorbar(data = reshaped_error,
aes(x = question,
ymax = up,
ymin = low,
alpha = 0.65),
show.legend = F,
width = .15) +
geom_hline(yintercept = 0.50, linetype = "dashed", color = "white", size = 0.5) +
scale_x_discrete(limits = c('Valore.complessivo', 'Bella', 'Informativa', 'Chiara', 'Intuitiva', 'Utile')) +
scale_y_continuous(labels = c('0 %', '25 %', '50 %', '75 %','100 %'),
sec.axis = sec_axis(~.*1,
labels = c('100 %', '75 %',
'50 %', '25 %',
'0 %'))) +
coord_flip() +
scale_fill_manual(values = c("#80ccff","#ffad33")) +
geom_text(aes(label = paste0(format(round(reshaped$answer*100, 1)), ' %'),
fontface = 'bold', vjust = 1.75), position = position_stack(vjust = 0.2),
size = 4, color = 'white') +
theme_classic(base_size = 12, base_family = "Helvetica") + # versione base, poi puoi arricchirlo come ti piace
theme(axis.text.x.bottom=element_text(size=10, color = '#ffad33', face = 'bold')) +
theme(axis.text.x.top=element_text(size=10, color = '#80ccff', face = 'bold')) +
theme(axis.title.y=element_text(size=14, face="bold", vjust=1)) +
theme(axis.title.x=element_text(size=14, face="bold", vjust=1)) +
theme(axis.text.y=element_text(size=10)) +
theme(legend.title = element_blank())
# viz 1 -------------------------------------------------------------------
png("stacked_bar_viz1.png", width = 15, height = 8, units = 'in', res = 800)
ggplot(reshaped,
aes(fill = value.answer,
y = answer,
x = question)) +
geom_bar(stat = "identity",
position = "fill",
width = 0.95,
alpha = 0.65,
colour = 'white') +
geom_errorbar(data = reshaped_error,
aes(x = question,
ymax = up,
ymin = low,
alpha = 0.65),
show.legend = F,
width = .15) +
geom_hline(yintercept = 0.50, linetype = "dashed", color = "white", size = 0.5) +
scale_x_discrete(limits = c('Valore.complessivo', 'Bella', 'Informativa', 'Chiara', 'Intuitiva', 'Utile')) +
scale_y_continuous(labels = c('0 %', '25 %', '50 %', '75 %','100 %'),
sec.axis = sec_axis(~.*1,
labels = c('100 %', '75 %',
'50 %', '25 %',
'0 %'))) +
coord_flip() +
scale_fill_manual(values = c("#80ccff","#ffad33")) +
geom_text(aes(label = paste0(format(round(reshaped$answer*100, 1)), ' %'),
fontface = 'bold', vjust = 1.75), position = position_stack(vjust = 0.2),
size = 4, color = 'white') +
theme_classic(base_size = 12, base_family = "Helvetica") + # versione base, poi puoi arricchirlo come ti piace
theme(axis.text.x.bottom=element_text(size=10, color = '#ffad33', face = 'bold')) +
theme(axis.text.x.top=element_text(size=10, color = '#80ccff', face = 'bold')) +
theme(axis.title.y=element_text(size=14, face="bold", vjust=1)) +
theme(axis.title.x=element_text(size=14, face="bold", vjust=1)) +
theme(axis.text.y=element_text(size=10)) +
theme(legend.title = element_blank())
# theme(legend.position="right", legend.box = TRUE)
#ggplotly(p)
dev.off()
#viz 2
df <- read.table('https://raw.githubusercontent.com/DBertazioli/ARmeetup/master/Visualizations/survey/Questionario%20psicometrico%20(VIZ_2).txt',
header = TRUE, sep = ",")
df_stack <- df[,c(-1,-8)]
df_stack = ifelse(df_stack <= 3, 0, 1)
# reshaping ---------------------------------------------------------------
df_stack <- as.data.frame(df_stack) # converto in dataframe
new_data <- cbind(table(df_stack$Utile), #credo tabella di contingenza
table(df_stack$Intuitiva),
table(df_stack$Chiara),
table(df_stack$Informativa),
table(df_stack$Bella),
table(df_stack$Valore.complessivo))
row.names(new_data) <- c("1-3", "4-6")
colnames(new_data) <- c("Utile", "Intuitiva", "Chiara", "Informativa", "Bella", "Valore.complessivo")
new_data <- as.data.frame(new_data)
n <- nrow(df_stack)
new_data <- new_data/n # frequenze relative
reshaped <- gather(new_data, "question", "answer") # reshape con pacchetto tidyr
reshaped$value.answer <- c("1-3","4-6","1-3","4-6","1-3","4-6","1-3","4-6","1-3","4-6","1-3","4-6")
reshaped$up <- reshaped$answer + 1.96*(sqrt((reshaped$answer*(1-reshaped$answer))/n)) # definisco conf int
reshaped$low <- reshaped$answer - 1.96*(sqrt((reshaped$answer*(1-reshaped$answer))/n))
reshaped_error <- reshaped[c(2,4,6,8,10,12),] # prendo solo valori per p non per 1-p
# viz 2 -------------------------------------------------------------------
reshaped_error$up <- ifelse(reshaped_error$up > 1, 1, reshaped_error$up)
png("stacked_bar_viz2.png", width = 15, height = 8, units = 'in', res = 800)
ggplot(reshaped,
aes(fill = value.answer,
y = answer,
x = question)) +
geom_bar(stat = "identity",
position = "fill",
width = 0.95,
alpha = 0.65,
colour = 'white') +
geom_errorbar(data = reshaped_error,
aes(x = question,
ymax = up,
ymin = low,
alpha = 0.65),
show.legend = F,
width = .15) +
geom_hline(yintercept = 0.50, linetype = "dashed", color = "white", size = 0.5) +
scale_x_discrete(limits = c('Valore.complessivo', 'Bella', 'Informativa', 'Chiara', 'Intuitiva', 'Utile')) +
scale_y_continuous(labels = c('0 %', '25 %', '50 %', '75 %','100 %'),
sec.axis = sec_axis(~.*1,
labels = c('100 %', '75 %',
'50 %', '25 %',
'0 %'))) +
coord_flip() +
scale_fill_manual(values = c("#80ccff","#ffad33")) +
geom_text(aes(label = paste0(format(round(reshaped$answer*100, 1)), '%'),
fontface = 'bold', vjust = 1.75), position = position_stack(vjust = 0.48),
size = 4, color = 'white') +
theme_classic(base_size = 12, base_family = "Helvetica") + # versione base, poi puoi arricchirlo come ti piace
theme(axis.text.x.bottom=element_text(size=10, color = '#ffad33', face = 'bold')) +
theme(axis.text.x.top=element_text(size=10, color = '#80ccff', face = 'bold')) +
theme(axis.title.y=element_text(size=14, face="bold", vjust=1)) +
theme(axis.title.x=element_text(size=14, face="bold", vjust=1)) +
theme(axis.text.y=element_text(size=10)) +
theme(legend.title = element_blank())
# theme(legend.position="right", legend.box = TRUE)
#ggplotly(p)
dev.off()
